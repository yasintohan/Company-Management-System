<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>